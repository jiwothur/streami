{"version":3,"sources":["Dog.js","DogList.js","App.js","index.js"],"names":["Dog","url","className","style","width","height","src","alt","DogList","dogsArray","dogs","map","dogURL","index","key","App","props","getDogs","a","name","fetch","then","res","json","data","code","setState","message","slice","state","items","alert","getDogNames","names","Object","keys","onTextChanged","e","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","text","handleKeyPress","infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","this","dog","onClick","suggestionSelected","window","addEventListener","textAlign","type","onChange","onKeyPress","renderSuggestions","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OAUeA,EARH,SAAC,GAAW,IAAVC,EAAS,EAATA,IACZ,OACE,yBAAKC,UAAU,SACX,yBAAKC,MAAQ,CAACC,MAAO,IAAKC,OAAQ,KAAKC,IAAKL,EAAKM,IAAI,eCU9CC,G,MAXC,SAAC,GAAY,IACrBC,EADoB,EAAVC,KACOC,KAAI,SAACC,EAAOC,GACjC,OAAO,kBAAC,EAAD,CAAKZ,IAAMW,EAAQE,IAAKD,OAEjC,OACE,yBAAKX,UAAU,aACVO,KC8FMM,G,wDAnGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,QAVmB,uCAUT,WAAOD,GAAP,eAAAE,EAAA,6DACFC,EAAOH,EADL,SAEFI,MAAM,6BAAD,OAA8BD,EAA9B,YACRE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,MAAdA,EAAKC,KACP,EAAKC,SAAS,CAAEhB,KAAMc,EAAKG,QAAQC,MAAM,EAAG,EAAKC,MAAMC,SAGvDC,MAAM,gEATJ,2CAVS,wDAuBnBC,YAvBmB,sBAuBL,sBAAAd,EAAA,sEACNE,MAAM,uCACTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKE,SAAS,CAAEO,MAAOC,OAAOC,KAAKX,EAAKG,cAJhC,2CAvBK,EA8BnBS,cAAgB,SAACC,GAAO,IACdJ,EAAU,EAAKJ,MAAfI,MACAK,EAAUD,EAAEE,OAAZD,MACJE,EAAc,GAClB,GAAIF,EAAMG,OAAS,EAAG,CACpB,IAAMC,EAAQ,IAAIC,OAAJ,WAAeL,GAAS,KACtCE,EAAcP,EAAMW,OAAOC,QAAO,SAAAC,GAAC,OAAIJ,EAAMK,KAAKD,MAEpD,EAAKpB,UAAS,iBAAO,CAAEc,cAAaQ,KAAMV,EAAOR,MAAO,QAtCvC,EA4CnBmB,eAAiB,SAACZ,GAAO,IACfC,EAAUD,EAAEE,OAAZD,MACM,UAAVD,EAAEvB,MACJ,EAAKY,UAAS,iBAAO,CAAEsB,KAAMV,EAAOE,YAAa,OACjD,EAAKvB,QAAQqB,KAhDE,EAgEnBY,eAAiB,WACf,IAAIC,EAAeC,KAAKC,IAAIC,SAASC,gBAAgBJ,aAAcG,SAASE,KAAKL,cACjEC,KAAKC,IAAIC,SAASC,gBAAgBE,UAAWH,SAASE,KAAKC,WACxDH,SAASC,gBAAgBG,eAEXP,IAC/B,EAAKzB,SAAS,CACZI,MAAO,EAAKD,MAAMC,MAAQ,KAE5B,EAAKb,QAAQ,EAAKY,MAAMmB,QAvE1B,EAAKnB,MAAQ,CACXC,MAAO,GACPpB,KAAM,GACNuB,MAAO,GACPO,YAAa,IANE,E,+DAwCAF,GACjBqB,KAAKjC,UAAS,iBAAO,CAAEsB,KAAMV,EAAOE,YAAa,OACjDmB,KAAK1C,QAAQqB,K,0CASM,IAAD,OACVE,EAAgBmB,KAAK9B,MAArBW,YACR,OAA2B,IAAvBA,EAAYC,OACP,KAGP,4BACGD,EAAY7B,KAAI,SAACiD,GAChB,OAAO,wBAAIC,QAAS,kBAAM,EAAKC,mBAAmBF,KAAOA,S,0CAmB/DD,KAAK3B,cACL+B,OAAOC,iBAAiB,SAAUL,KAAKT,gBAAgB,K,+BAG/C,IACAF,EAASW,KAAK9B,MAAdmB,KACR,OACE,6BACE,wBAAI7C,MAAO,CAAE8D,UAAW,WAAxB,sBAGA,yBAAK/D,UAAU,oBACb,2BAAOgE,KAAK,OAAO5B,MAAOU,EAAMmB,SAAUR,KAAKvB,cAAegC,WAAYT,KAAKV,iBAC9EU,KAAKU,qBAER,kBAAC,EAAD,CAAS3D,KAAMiD,KAAK9B,MAAMnB,Y,GA9FhB4D,cCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnB,SAASoB,eAAe,U","file":"static/js/main.04df5f09.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Dog = ({url}) => {\r\n  return(\r\n    <div className=\"child\">\r\n        <img style ={{width: 350, height: 400}}src={url} alt=\"dogImage\"/>\r\n    </div>\r\n   )\r\n }\r\n\r\nexport default Dog;","import React from 'react'\r\nimport Dog from './Dog';\r\nimport './DogList.css';\r\n\r\nconst DogList = ({dogs}) => {\r\n  const dogsArray = dogs.map((dogURL,index)=>{\r\n    return <Dog url ={dogURL} key={index}/>\r\n  })\r\n  return(\r\n    <div className=\"container\">\r\n        {dogsArray}\r\n    </div>\r\n   )\r\n }\r\n\r\nexport default DogList;","import React, { Component } from 'react';\nimport DogList from './DogList';\nimport './AutoCompleteText.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: 10,\n      dogs: [],\n      names: [],\n      suggestions: []\n    }\n  }\n\n  getDogs = async (props) => {\n    const name = props;\n    await fetch(`https://dog.ceo/api/breed/${name}/images`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code !== 404) {\n          this.setState({ dogs: data.message.slice(0, this.state.items) })\n        }\n        else {\n          alert('해당 견종이 없습니다.');\n        }\n      })\n  }\n  getDogNames = async () => {\n    await fetch(`https://dog.ceo/api/breeds/list/all`)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ names: Object.keys(data.message) })\n      })\n  }\n  onTextChanged = (e) => {\n    const { names } = this.state;\n    const { value } = e.target;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = names.sort().filter(v => regex.test(v));\n    }\n    this.setState(() => ({ suggestions, text: value, items: 10 }));\n  }\n  suggestionSelected(value) {\n    this.setState(() => ({ text: value, suggestions: [] }));\n    this.getDogs(value);\n  }\n  handleKeyPress = (e) => {\n    const { value } = e.target;\n    if (e.key === \"Enter\") {\n      this.setState(() => ({ text: value, suggestions: [] }));\n      this.getDogs(value);\n    }\n  };\n  renderSuggestions() {\n    const { suggestions } = this.state;\n    if (suggestions.length === 0) {\n      return null\n    }\n    return (\n      <ul>\n        {suggestions.map((dog) => {\n          return <li onClick={() => this.suggestionSelected(dog)}>{dog}</li>\n        })}\n      </ul>\n    )\n  }\n  infiniteScroll = () => {\n    let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    let clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n      this.setState({\n        items: this.state.items + 10\n      })\n      this.getDogs(this.state.text);\n    }\n  }\n\n  componentDidMount() {\n    this.getDogNames();\n    window.addEventListener('scroll', this.infiniteScroll, true)\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div>\n        <h1 style={{ textAlign: 'center' }}>\n          Streami Assignment\n        </h1>\n        <div className=\"AutoCompleteText\">\n          <input type=\"text\" value={text} onChange={this.onTextChanged} onKeyPress={this.handleKeyPress} />\n          {this.renderSuggestions()}\n        </div>\n        <DogList dogs={this.state.dogs} />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}